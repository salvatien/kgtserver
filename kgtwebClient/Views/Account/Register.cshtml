
@{
    ViewBag.Title = "Register";
}
@using Dogs.ViewModels.Data.Models.Account;
@model RegisterModel

<div style="margin:60px">

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Utwórz nowe konto.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.FirstName, new { @id = "newUserFirstName", @class = "form-control" })
            </div>
            <div class="formValidation" id="newUserFirstNameValidationInfo">
                To pole musi być uzupełnione.
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.LastName, new { @id = "newUserLastName", @class = "form-control" })
            </div>
            <div class="formValidation" id="newUserLastNameValidationInfo">
                To pole musi być uzupełnione.
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Username, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Username, new { @id = "newUserUsername", @class = "form-control" })
            </div>
            <div class="formValidation" id="newUserUsernameValidationInfo">
                To pole musi być uzupełnione.
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @id = "newUserEmail", @class = "form-control" })
            </div>
            <div class="formValidation" id="newUserEmailValidationInfo">
                To pole musi być uzupełnione.
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @id = "newUserPassword", @class = "form-control" })
            </div>
            <div> Hasło powinno zawierać minimum 6 znaków, w tym co najmniej 1 cyfrę.</div>
            <div class="formValidation" id="newUserPasswordValidationInfo">
                To pole musi być uzupełnione.
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.PasswordConfirmation, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.PasswordConfirmation, new { @id = "newUserPasswordConfirmation", @class = "form-control" })
            </div>
            <div class="formValidation" id="newUserPasswordConfirmationValidationInfo">
                To pole musi być uzupełnione.
            </div>
        </div>

        <div class="formValidation" id="passwordsDoNotMatch">
            Podane hasła nie są identyczne!
        </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <br />
            <input type="submit" class="btn btn-default" value="Zarejestruj" onclick="return validateRegistration()" />
        </div>
     </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    function validateRegistration() {
        alert("walidacja start");
        //alert(typeof $('#addDogDateOfBirth').val());
        if ($('#newUserFirstName').val() == "" || $('#newUserLastName').val() == "" || $('#newUserUsername').val() == ""
            || $('#newUserEmail').val() == "" || $('#newUserPassword').val() == "" || $('#newUserPasswordConfirmation').val() == "") {
            if ($('#newUserFirstName').val() == "")
                document.getElementById("newUserFirstNameValidationInfo").style.display = "block";
            else
                document.getElementById("newUserFirstNameValidationInfo").style.display = "none";

            if ($('#newUserLastName').val() == "")
                document.getElementById("newUserLastNameValidationInfo").style.display = "block";
            else
                document.getElementById("newUserLastNameValidationInfo").style.display = "none";

            alert(typeof $('#newUserUsername').val());

            if ($('#newUserUsername').val() == "")
                document.getElementById("newUserUsernameValidationInfo").style.display = "block";
            else
                document.getElementById("newUserUsernameValidationInfo").style.display = "none";

            if ($('#newUserEmail').val() == "")
                document.getElementById("newUserEmailValidationInfo").style.display = "block";
            else
                document.getElementById("newUserEmailValidationInfo").style.display = "none";

            if ($('#newUserPassword').val() == "")
                document.getElementById("newUserPasswordValidationInfo").style.display = "block";
            else
                document.getElementById("newUserPasswordValidationInfo").style.display = "none";

            if ($('#newUserPasswordConfirmation').val() == "")
                document.getElementById("newUserPasswordConfirmationValidationInfo").style.display = "block";
            else
                document.getElementById("newUserPasswordConfirmationValidationInfo").style.display = "none";

            if ($('#newUserPassword').val() != $('#newUserPasswordConfirmation').val())
                document.getElementById("passwordsDoNotMatch").style.display = "block";
            else
                document.getElementById("passwordsDoNotMatch").style.display = "none";

            return false;
        }
    }
</script>


