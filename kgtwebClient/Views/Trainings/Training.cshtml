@using kgtwebClient.Helpers;

@{
    ViewBag.Title = "Training";
    var mostRecentCommentDate = new DateTime();
}

@using Dogs.ViewModels.Data.Models;
@model Dogs.ViewModels.Data.Models.TrainingModel

<div style="margin:60px">
    <p style="margin:60px">
        @{ if (LoginHelper.IsAuthenticated())
            {
                @Html.ActionLink("--Update Training--", "UpdateTraining", "Trainings", new { id = Model.TrainingId }, null)
            }
        }

        @Html.ActionLink("Back to List", "Index")
    </p>
    <div class="data">
        <h4>@Html.DisplayFor(model => model.GeneralLocation) @Html.DisplayFor(model => model.Date)</h4>
        <hr />
        <dl class="dl-horizontal" style="float:left">
            <dt>
                @Html.DisplayNameFor(model => model.LocationDetails)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LocationDetails)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Notes)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Notes)
            </dd>
            <dt style="color:red; font-size:large">
                COMMENTS HERE SOMETIME
            </dt>

            @if (Model.Comments != null && Model.Comments.Any())
            {
                <dt>
                    @Html.DisplayNameFor(model => model.Comments)
                </dt>
                <dd>
                    <table id="commentsTable">
                        @{
                            foreach (var comment in Model.Comments)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(m => comment.AuthorName)</td>
                                    <td>@Html.DisplayFor(m => comment.Date)</td>
                                    <td>@Html.DisplayFor(m => comment.Content)</td>
                                    @if (comment.Date > mostRecentCommentDate)
                                    {
                                        mostRecentCommentDate = comment.Date;
                                    }
                                </tr>
                            }

                        }
                    </table>
                    <p id="newCommentWasAdded" hidden style="color:red"> Dodano nowy komentarz lub zmieniono istniejący! Odśwież stronę, aby zobaczyć najnowsze dane </p>
                </dd>
            }

            @if (Model.DogTrainings != null && Model.DogTrainings.Any())
            {
                <dt>
                    @Html.DisplayNameFor(model => model.DogTrainings)
                </dt>
                <dd>
                    <table id="dogsTable">
                        @{
                            foreach (var dogTraining in Model.DogTrainings)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(m => dogTraining.Dog.Name)</td>
                                    <td>
                                        <button class="displayButton" onclick="location.href='@Url.Action("Training", "DogTrainings", new { dogId = @dogTraining.DogId, trainingId=dogTraining.TrainingId  })'">wyświetl trening psa</button>
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </dd>
            }

        </dl>
    </div>
</div>


<script src="https://code.jquery.com/jquery-1.11.0.min.js" type="text/javascript"></script>

<script>

    function showNewCommentMessage() {
        var ticks = @mostRecentCommentDate.Subtract(new DateTime(1970, 1, 1)).TotalMilliseconds;
        var time = new Date(ticks);
            $.ajax({
                url: 'http://localhost:12321/api/Comments/TrainingCommentsByTrainingId/@Model.TrainingId',
            type: 'GET',
            dataType: 'json',
                success: function (data, textStatus, xhr) {
                    for (comment of data) {
                        var date = new Date(comment.date);
                        if (date > time) {
                            $('#newCommentWasAdded').removeAttr('hidden');
                        }
                    }
                },
            error: function (xhr, textStatus, errorThrown) {
                console.log('Error in Database');

            }
        });
        }

    //check every 2 minutes for updates in comments
    setInterval(function () { showNewCommentMessage(); }, 60000);

</script>
