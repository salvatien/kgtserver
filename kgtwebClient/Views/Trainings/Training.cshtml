@using System.Configuration;
@{
    ViewBag.Title = "Training";
    var googleMapsLinkWithApiKey = "https://maps.googleapis.com/maps/api/js?key=" + @ConfigurationManager.AppSettings["GoogleApiKey"] + "&callback=initMap";
}



@model Dogs.ViewModels.Data.Models.DogTrainingViewModel


<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Complex Polylines</title>
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>
    <div id="map" style="width:500px; height:500px; margin:60px"></div>

    <script>

        // This example creates an interactive map which constructs a polyline based on
        // user clicks. Note that the polyline only appears once its path property
        // contains two LatLng coordinates.

        var poly;
        var map;

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 17,
                center: { lat: 50.1085352898,lng: 19.7763991356 }  // Center the map on POLSZA
            });

            var punkty = [];
            @foreach (var pt in Model.LostPersonTrackPoints)
            {
                @: punkty.push({ lat: @pt.Lat, lng: @pt.Lon });
                //@: console.log(punkty);
                //@: punkty.push("@pt");
            }


            var sladTest = [

                @*{@Model.Lat, @Model.Lon},*@
                { lat: 50.772, lng: 20.214 },
                { lat: 50.291, lng: 20.821 },
                { lat: 50.142, lng: 20.431 },
                { lat: 50.467, lng: 30.027 }
            ];

            poly = new google.maps.Polyline({
                path: punkty,
                strokeColor: '#FF0000',
                strokeOpacity: 1.0,
                strokeWeight: 3
            });
            poly.setMap(map);
            //var date;
            //var time;
            @foreach (var pt in Model.LostPersonTrackPoints) {
                var t = pt.Time;
                @: var date = '@HttpUtility.JavaScriptStringEncode(t)';
                @: var time = new Date(date).toLocaleTimeString();

                @:  var marker = new google.maps.Marker({
                @:        position: { lat: @pt.Lat, lng: @pt.Lon },
                @:
                @:        icon: {
                @:          path: google.maps.SymbolPath.CIRCLE,
                @:          scale: 2
                @:        },
                @:        title: 'czas: ' + '\'@pt.Time\'', 
                @:        map: map
                @:  });

                @*@:   pointInfo = 'szerokość:' + @pt.Lat;
                @:  pointInfo += ', długość:' + @pt.Lon;
                @:  pointInfo += ', czas: ' + '\'@pt.Time\'';*@
                @*@:  var infowindow = new google.maps.InfoWindow({
                @:      content: 'szerokość:' + @pt.Lat
                @:  });*@
                @:  console.log("time: " + time);
                @:  marker.addListener('click', function () { new google.maps.InfoWindow({
                @:                                                           content: 'szerokość:' + @pt.Lat +  ',\n długość:' + @pt.Lon  + ',\n czas:' + date @*'@pt.Time'*@
                @:                                                              }).open(map, this) }/*showInfoWindow(infowindow, map, marker)*/);
            }

            // Add a listener for the click event
            map.addListener('click', addLatLng);
        }
        function showInfoWindow(infowindow, map, marker) { infowindow.open(map, marker) }
        // Handles click events on a map, and adds a new point to the Polyline.
        function addLatLng(event) {
            var path = poly.getPath();

            // Because path is an MVCArray, we can simply append a new coordinate
            // and it will automatically appear.
            path.push(event.latLng);

            // Add a new marker at the new plotted point on the polyline.
            var marker = new google.maps.Marker({
                position: event.latLng,
                title: '#' + path.getLength(),
                map: map
            });
        }

        function parseISOString(s) {
            var b = s.split(/\D+/);
            return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));
        }

    </script>
    <script async defer
            src="@googleMapsLinkWithApiKey">
    </script>
</body>
</html>