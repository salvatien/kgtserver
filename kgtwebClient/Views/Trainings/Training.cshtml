@using kgtwebClient.Helpers;

@{
    ViewBag.Title = "Training";
    var mostRecentCommentDate = new DateTime();
}

@using Dogs.ViewModels.Data.Models;
@model Dogs.ViewModels.Data.Models.TrainingModel

<div style="margin:60px">
    <p>
        @{ if (LoginHelper.IsAuthenticated())
            {
                @Html.ActionLink("Zmień dane o treningu", "UpdateTraining", "Trainings", new { id = Model.TrainingId }, null)
            }
        }

        @Html.ActionLink("Wróć do listy", "Index")
    </p>
    <div class="data">
        <h4>@Html.DisplayFor(model => model.GeneralLocation), @Html.DisplayFor(model => model.LocationDetails), @Html.DisplayFor(model => model.Date)</h4>
        <hr />
        <dl class="dl-horizontal" style="float:left">

            <dt>
                @Html.DisplayNameFor(model => model.Notes)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Notes)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Weather)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Weather)
            </dd>
            @*<dt style="color:red; font-size:large">
            COMMENTS HERE SOMETIME
        </dt>*@

            <dt>
                @Html.DisplayNameFor(model => model.Comments)
            </dt>
            @if (Model.Comments != null && Model.Comments.Any())
            {
                <dd>
                    <table id="commentsTable" style="width:100%; table-layout:fixed">
                        @{
                            foreach (var comment in Model.Comments)
                            {
                                <tr class="comment">
                                    @if (comment.AuthorId == LoginHelper.GetCurrentUserId())
                                    {
                                        <td>Ja</td>
                                    }
                                    else
                                    {
                                        <td>@Html.DisplayFor(m => comment.AuthorName)</td>
                                    }
                                    <td>@Html.DisplayFor(m => comment.Date)</td>
                                    <td style="max-width:50%; word-wrap:break-word; overflow:auto;">@Html.DisplayFor(m => comment.Content)</td>
                                    @if (comment.Date > mostRecentCommentDate)
                                    {
                                        mostRecentCommentDate = comment.Date;
                                    }
                                    @{ if (LoginHelper.IsCurrentUserAdmin() || LoginHelper.GetCurrentUserId() == comment.AuthorId)
                                        {
                                            <td style="background-color:white">
                                                <button class="deleteButton" onclick="deleteComment(@comment.CommentId)" id="@("deleteCommentButton" + comment.CommentId)">usuń</button>
                                            </td>
                                        }
                                    }
                                </tr>
                            }

                        }
                    </table>

                </dd>
            }
            else
            {
                <table id="commentsTable"></table>
            }

            @Html.TextArea("Message", new { id = "newCommentMessage", rows = 8, columns = 40 })
            <br />
            <button class="displayButton" type="button" id="addNewComment">Dodaj komentarz</button>
            <p id="newCommentWasAdded" hidden style="color:red"> Ktoś dodał nowy komentarz lub zmienił istniejący! Odśwież stronę, aby zobaczyć najnowsze dane </p>

            @if (Model.DogTrainings != null && Model.DogTrainings.Any())
            {
                <dt>
                    @Html.DisplayNameFor(model => model.DogTrainings)
                </dt>
                <dd>
                    <table id="dogsTable">
                        @{
                            foreach (var dogTraining in Model.DogTrainings)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(m => dogTraining.Dog.Name)</td>
                                    <td>
                                        <button class="displayButton" type="button" onclick="location.href='@Url.Action("Training", "DogTrainings", new { dogId = @dogTraining.DogId, trainingId=dogTraining.TrainingId  })'">wyświetl trening psa</button>
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </dd>
            }

        </dl>
    </div>
</div>


<script src="https://code.jquery.com/jquery-1.11.0.min.js" type="text/javascript"></script>

<script>

    function showNewCommentMessage() {
        var ticks = @mostRecentCommentDate.Subtract(new DateTime(1970, 1, 1)).TotalMilliseconds;
        var time = new Date(ticks);
        $.ajax({
            url: "@Url.Action("GetTrainingCommentsByTrainingId", "Comments", new { trainingId = Model.TrainingId})",
            type: 'GET',
            dataType: 'json',
                success: function (data, textStatus, xhr) {
                    if (data.success) {
                        for (comment of data.data) {
                            var date = new Date(comment.date);
                            if (date > time) {
                                $('#newCommentWasAdded').removeAttr('hidden');
                            }
                        }
                    }
                    
                },
            error: function (xhr, textStatus, errorThrown) {
                console.log('Error in Database');

            }
        });
    }

    //check every 2 minutes for updates in comments
    setInterval(function () { showNewCommentMessage(); }, 60000);

    //Add New Comment  
    $('#addNewComment').on('click', function (e) {  
  
        var trainingId = @Model.TrainingId; 
        var commentMsg = $('#newCommentMessage').val();  
        var dateTimeNow = new Date();  
                  
        var comment = {  
            AuthorId: @LoginHelper.GetCurrentUserId(),  
            Date: dateTimeNow.toLocaleString(),
            Content: commentMsg,
            TrainingId: @Model.TrainingId
        };  

        console.log(comment);
  
        $.ajax({  
            type: 'POST',  
            url: "@Url.Action("AddTrainingComment", "Comments")",
            data: comment,  
            dataType: 'json',
            contentType: "application/x-www-form-urlencoded",
            success: function (response) {  
                if (response.success) {
                    var id = response.id;
                    var itemIndex = $(".comment").length;
                    e.preventDefault();
                    //html code for a new row containing this comment
                    var html = $('<tr class="comment" id="comment-"' + itemIndex + '>'
                        + '<td>' + "Ja" + '</td>'
                        + '<td>' + comment.Date + '</td>'
                        + '<td>' + comment.Content + '</td>'
                        + '<td style="background-color:white">'
                            + '<button class="deleteButton" type="button" onclick="deleteComment(' + id + ')" '
                                + 'id="@("deleteCommentButton")' + id + '">usuń'
                            + '</button>'
                        + '</td ></tr > ');
                    $("#commentsTable").append(html);
                    $('#newCommentMessage').val("");
                }
            },  
            error: function (response) {  
                alert('Sorry: Something Wrong');  
            }  
  
        });  
  
    });  
    function deleteComment(commentId) {
        alert("Delete comment: " + commentId);
        $.ajax({
            url: "@Url.Action("DeleteTrainingComment", "Comments")",
            method: "POST", //First change type to method here
            data: {
                id: commentId, 
            },
            success: function (response) {
                if (response) {
                    //var resp = jQuery.parseJSON(response);
                    var resp = response;
                    //console.log(resp);
                    if (resp.success) {
                        alert("udało się usunac komentarz o id: " + resp.id);
                        //usunięcie z tabeli tr ktory zawiera button o id deleteDogButton<id>
                        //var buttonId = "deleteDogButton" + dogId;
                    var button = $("#deleteCommentButton" + resp.id );

                    var tableRow = button.closest("tr");
                        //alert(button.text());
                        tableRow.remove();
                    }
                }
            },
            error: function () {
                alert("error");
            }

        });
    }
</script>
